# This workflow runs after PSGallery Publish run completes

name: Update Docs

# Controls when the action will run.
on:
  #  workflow_run:
  #    workflows: ["PSGallery Publish"]
  #    types:
  #      - completed
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-2019

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      #Cache Modules that are required by publishing modules
      - name: Specify PowerShell modules to cache
        id: psmodulecache
        uses: potatoqualitee/psmodulecache@v5.1
        with:
          modules-to-cache: PlatyPS

      #Run pwsh functions to publish the module
      - name: Update markdown help documentation
        env:
          GIT_EMAIL: ${{ secrets.GIT_EMAIL }}
        shell: pwsh
        run: |
          #Install Modules missed by the Cache action

          Set-PSRepository PSGallery -InstallationPolicy Trusted
          Install-Module Admintoolbox -force
          Get-Module Admintoolbox, PlatyPS | Import-Module

          #Set Variable
          $workingdirectory = (get-location).path

          #Update help
          $Modules = Get-Module Admintool*

          foreach ($ModuleName in $modules.name) {
              New-MarkdownHelp -Module $ModuleName -OutputFolder "$workingdirectory\docs\$ModuleName" -Force
          }

          #Write Updated help back to the master branch
          git config --global user.email $env:GIT_EMAIL
          git config --global user.name "TheTaylorLee"
          git add -A
          git commit -m "docs: Update_Docs"
          git push -u origin main
